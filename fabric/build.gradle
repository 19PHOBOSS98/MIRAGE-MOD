plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

repositories {
    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    flatDir {
        dirs 'lib'
    }
    mavenCentral()
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }

    modImplementation 'software.bernie.geckolib:geckolib-fabric-1.18:3.0.80'

    modRuntimeOnly "maven.modrinth:nELKzJ5C:RbIlcuU7" //https://modrinth.com/mod/open-simple-frames/version/RbIlcuU7
    modRuntimeOnly "net.phoboss:decobeacon:0.0.1-1.18.2-Fabric"
    modCompileOnlyApi "net.phoboss:decobeacon:0.0.1-1.18.2-Fabric"
/*
    implementation("io.github.douira:glsl-transformer:2.0.0-pre14")
    implementation("org.anarres:jcpp:1.4.14")
    modRuntimeOnly "maven.modrinth:YL57xq9U:ogIRhnAJ" //https://modrinth.com/mod/iris/version/1.6.11+1.18.2
    modRuntimeOnly "maven.modrinth:AANobbMI:74Y5Z8fo" //https://modrinth.com/mod/sodium/version/mc1.18.2-0.4.1
*/

    // https://mvnrepository.com/artifact/org.joml/joml
    implementation 'org.joml:joml:1.10.5'
    implementation("io.github.douira:glsl-transformer:2.0.0")
    implementation("org.anarres:jcpp:1.4.14")
    modRuntimeOnly("maven.modrinth:iris:1.6.11+1.18.2")

    modCompileOnlyApi "maven.modrinth:YL57xq9U:ogIRhnAJ" //https://modrinth.com/mod/iris/version/1.6.11+1.18.2
    modCompileOnlyApi "maven.modrinth:AANobbMI:74Y5Z8fo" //https://modrinth.com/mod/sodium/version/mc1.18.2-0.4.1

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
