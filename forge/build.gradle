plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

repositories {
    // Add KFF Maven repository
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name "tterrag maven"
        url "https://maven.tterrag.com/"
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    flatDir {
        dirs 'lib'
    }
    mavenCentral()
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    modCompileOnlyApi "curse.maven:oculus-581495:4578744"
    modCompileOnlyApi "orge.embeddedt:embeddium:0.2.17-git.d06d0fa.dirtymc1.18.2"
    modCompileOnlyApi "curse.maven:framedblocks-441647:4567924"

    modRuntimeOnly "curse.maven:framedblocks-441647:4567924"

    modCompileOnlyApi "net.phoboss:decobeacon:0.0.1-1.18.2"
    modRuntimeOnly "net.phoboss:decobeacon:0.0.1-1.18.2"

    modRuntimeOnly "maven.modrinth:c7m1mi73:vxZXdQPK"//https://modrinth.com/mod/packet-fixer/version/vxZXdQPK //added to fix server error: "Tried to read NBT tag that was too big"

    //COMMENTOUT when running in server//
    modRuntimeOnly "curse.maven:oculus-581495:4578744"
    modRuntimeOnly "orge.embeddedt:embeddium:0.2.17-git.d06d0fa.dirtymc1.18.2"
    modRuntimeOnly "curse.maven:minemaresurection-596719:3831181"
    modRuntimeOnly "curse.maven:cmdcam-251244:4426920"
    modRuntimeOnly "curse.maven:creativecore-257814:4629846"

}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
